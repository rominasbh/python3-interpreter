
Run at: Mon Apr 22 11:09:48 2024
File: in01.py
ResultComparison = 3 
ResultIf = 5 
z = 1 

Run at: Mon Apr 22 11:10:21 2024
File: in02.py
Error: Variable 'd' is not defined.

Run at: Mon Apr 22 11:22:44 2024
File: in02.py
Error: Variable 'd' is not defined.

Run at: Mon Apr 22 11:22:51 2024
File: in02.py
Error: Variable 'd' is not defined.

Run at: Mon Apr 22 11:24:51 2024
File: in02.py
Error: Variable 'd' is not defined.

Run at: Mon Apr 22 11:26:12 2024
File: in02.py
Error: Variable 'd' is not defined.

Run at: Mon Apr 22 11:26:26 2024
File: in02.py
Condition evaluated to: false
Error: Variable 'd' is not defined.

Run at: Mon Apr 22 11:27:25 2024
File: in01.py
Condition evaluated to: true
Condition evaluated to: true
ResultComparison = 3 
ResultIf = 5 
z = 1 
Exiting block environment.

Run at: Mon Apr 22 11:31:56 2024
File: in02.py
Parsing print statement.
Parsing print statement.
Assigning: a = 5
Assigning: b = 10
Assigning: val = 60
Assigning: c = 0
Condition evaluated to: false
Error: Variable 'd' is not defined.

Run at: Mon Apr 22 12:02:38 2024
File: in02.py
Error: Unexpected token in statement

Run at: Mon Apr 22 12:02:47 2024
File: in01.py
Error: Unexpected token in statement

Run at: Mon Apr 22 12:16:41 2024
File: in01.py
Error: Unexpected token in statement

Run at: Mon Apr 22 12:16:45 2024
File: in02.py
Error: Unexpected token in statement

Run at: Mon Apr 22 12:23:23 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 33
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 13
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 23
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 80
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Error: Unexpected token in statement

Run at: Mon Apr 22 12:33:36 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 33
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 13
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 23
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 80
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Error: Unexpected token in statement

Run at: Mon Apr 22 12:40:27 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 33
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 13
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 23
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 80
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Error: Unexpected token in statement

Run at: Mon Apr 22 12:42:29 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 33
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 13
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 23
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 80
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
got to 
Error: Unexpected token in statement

Run at: Mon Apr 22 12:46:24 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 33
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 13
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 23
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 80
Added token: Type - 23, Text - :
Added token: Type - 24, Text - 
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
got to 
Error: Unexpected token in statement

Run at: Mon Apr 22 12:50:03 2024
File: ex1/in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
got to 
Error: Unexpected token in statement

Run at: Mon Apr 22 13:05:12 2024
File: ex1/in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Parsing statement, next token: Type - , Text - ''
Error: Unexpected token in statement

Run at: Mon Apr 22 13:12:38 2024
File: ex1/in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 26, Text - 

Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - 
, Text - '
'
Error: Unexpected token in statement

Run at: Mon Apr 22 13:15:27 2024
File: ex1/in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 26, Text - 

Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - 
, Text - '
'
Error: Unexpected token in statement

Run at: Mon Apr 22 13:16:26 2024
File: ex1/in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 3
Assigning: b = 2
Assigning: a = 1
a = 1 
b = 2 
Exiting block environment.

Run at: Mon Apr 22 13:16:37 2024
File: in01.py
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - resultComparison
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultComparison
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 2
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultIf
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 4
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultComparison =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultComparison
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultIf =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultIf
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - resultComparison, Text - 'resultComparison'
Processing assignment for variable: resultComparison
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
Parsing statement, next token: Type - if, Text - 'if'
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: x = 5
Assigning: resultComparison = 3
Assigning: z = 0
Condition evaluated to: true
Assigning: resultIf = 5
Condition evaluated to: true
Assigning: z = 1
Exiting block environment.
Exiting block environment.
ResultComparison = 3 
ResultIf = Error: Variable 'resultIf' is not defined.

Run at: Mon Apr 22 13:26:24 2024
File: in01.py
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - resultComparison
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultComparison
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 2
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultIf
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 4
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultComparison =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultComparison
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultIf =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultIf
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - resultComparison, Text - 'resultComparison'
Processing assignment for variable: resultComparison
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: x = 5
Assigning: resultComparison = 3
Assigning: z = 0
Condition evaluated to: true
Assigning: resultIf = 5
Condition evaluated to: true
Assigning: z = 1
Exiting block environment.
Exiting block environment.
ResultComparison = 3 
ResultIf = Error: Variable 'resultIf' is not defined.

Run at: Mon Apr 22 13:41:04 2024
File: in01.py
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - resultComparison
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultComparison
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 2
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultIf
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 4
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultComparison =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultComparison
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultIf =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultIf
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - resultComparison, Text - 'resultComparison'
Processing assignment for variable: resultComparison
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: x = 5
Assigning: resultComparison = 3
Assigning: z = 0
Condition evaluated to: true
Assigning: resultIf = 5
Condition evaluated to: true
Assigning: z = 1
Exiting block environment.
Exiting block environment.
ResultComparison = 3 
ResultIf = Error: Variable 'resultIf' is not defined.

Run at: Mon Apr 22 13:41:16 2024
File: ex1/in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 3
Assigning: b = 2
Assigning: a = 1
a = 1 
b = 2 
Exiting block environment.

Run at: Mon Apr 22 13:41:20 2024
File: in01.py
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - resultComparison
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultComparison
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 2
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultIf
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 4
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultComparison =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultComparison
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultIf =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultIf
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - resultComparison, Text - 'resultComparison'
Processing assignment for variable: resultComparison
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: x = 5
Assigning: resultComparison = 3
Assigning: z = 0
Condition evaluated to: true
Assigning: resultIf = 5
Condition evaluated to: true
Assigning: z = 1
Exiting block environment.
Exiting block environment.
ResultComparison = 3 
ResultIf = Error: Variable 'resultIf' is not defined.

Run at: Mon Apr 22 13:53:04 2024
File: in01.py
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - resultComparison
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultComparison
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 2
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultIf
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 4
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultComparison =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultComparison
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultIf =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultIf
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - resultComparison, Text - 'resultComparison'
Processing assignment for variable: resultComparison
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: x = 5
Assigning: resultComparison = 3
Assigning: z = 0
Condition evaluated to: true
Assigning: resultIf = 5
Condition evaluated to: true
Assigning: z = 1
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
ResultComparison = 3 
ResultIf = 5 
z = 1 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:53:48 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 33
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 13
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 23
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 80
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 5
Assigning: b = 10
Assigning: val = 60
Assigning: c = 0
Condition evaluated to: false
Assigning: e = 13
Assigning: tempB = 38
Condition evaluated to: true
Assigning: c = 1
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 60 
c = 1 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:56:58 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - b
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 17, Text - ==
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 17, Text - ==
Added token: Type - 0, Text - 33
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 13
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 23
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 80
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 5
Assigning: b = 10
Assigning: val = 40
Assigning: c = 0
Condition evaluated to: true
Assigning: d = 12
Assigning: tempA = -20
Condition evaluated to: false
Assigning: c = 2
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 40 
c = 2 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:57:15 2024
File: in04.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 50
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 11
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 30
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 75
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 5
Assigning: b = 4
Assigning: val = 10
Assigning: c = 0
Condition evaluated to: false
Assigning: e = 14
Assigning: tempB = 38
Condition evaluated to: false
Assigning: c = 2
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 10 
c = 2 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:57:30 2024
File: in05.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 20
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 7, Text - b
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 10
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 15
Added token: Type - 13, Text - if
Added token: Type - 7, Text - z
Added token: Type - 17, Text - ==
Added token: Type - 0, Text - 30
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - e
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 12
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 50
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 5
Assigning: b = 10
Assigning: val = 17
Assigning: c = 0
Assigning: y = 0
Condition evaluated to: true
Assigning: d = 15
Assigning: tempA = 20
Condition evaluated to: true
Assigning: c = 0
Exiting block environment, variables preserved in parent environment.
Assigning: z = 30
Condition evaluated to: true
Assigning: y = 1
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 17 
c = 0 
y = 1 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:57:43 2024
File: in06.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 20
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 7, Text - b
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 10
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 9
Added token: Type - 13, Text - if
Added token: Type - 7, Text - z
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - e
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 12
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 50
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 5
Assigning: b = 10
Assigning: val = 17
Assigning: c = 0
Assigning: y = 3
Condition evaluated to: true
Assigning: d = 5
Assigning: tempA = 10
Condition evaluated to: false
Assigning: c = 3
Exiting block environment, variables preserved in parent environment.
Assigning: z = 45
Condition evaluated to: false
Assigning: y = 0
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 17 
c = 3 
y = 0 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:57:54 2024
File: in07.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 20
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 7, Text - b
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempA
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 10
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 9
Added token: Type - 13, Text - if
Added token: Type - 7, Text - z
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 40
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 11
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - e
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 12
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 50
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 4
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tempC
Added token: Type - 8, Text - =
Added token: Type - 7, Text - e
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempC
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 20
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
Parsing statement, next token: Type - tempC, Text - 'tempC'
Processing assignment for variable: tempC
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: c = 0
Assigning: y = 3
Condition evaluated to: false
Assigning: e = 16
Assigning: tempB = 36
Condition evaluated to: true
Assigning: y = 2
Exiting block environment, variables preserved in parent environment.
Assigning: tempC = 19
Condition evaluated to: false
Assigning: y = 5
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 16 
c = 0 
y = 5 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:58:03 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - c
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 13
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 7, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 7, Text - testValue
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - testValue
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - result
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - def, Text - 'def'
Processing assignment for variable: def
Error at evaluate: Expect '=' after variable name. instead found token type: 7
Error: Expect '=' after variable name. instead found evaluate

Run at: Mon Apr 22 13:58:39 2024
File: in10.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 13, Text - if
Added token: Type - 7, Text - x
Added token: Type - 22, Text - <=
Added token: Type - 0, Text - 100
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 6
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - resC
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 12
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 9
Added token: Type - 7, Text - resC
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - resA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - resB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resB
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - resC =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resC
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - resC, Text - 'resC'
Processing assignment for variable: resC
consuming ddent
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - resC, Text - 'resC'
Processing assignment for variable: resC
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Condition evaluated to: false
Assigning: y = 16
Assigning: resA = 0
Assigning: resB = 16
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: true
Assigning: t1 = 3
Assigning: t2 = 8
Assigning: resC = 11
Exiting block environment, variables preserved in parent environment.
resA = 0 
resB = 16 
resC = 11 
Exiting block environment, variables preserved in parent environment.

Run at: Mon Apr 22 13:59:17 2024
File: in10.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 9
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 7, Text - y
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 30
Added token: Type - 7, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - c
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 13
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 25, Text - 
Added token: Type - 7, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 7, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 13, Text - if
Added token: Type - 7, Text - e
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 7
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 4
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 11
Added token: Type - 13, Text - if
Added token: Type - 7, Text - e
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 23
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 7, Text - scale
Added token: Type - 7, Text - return
Added token: Type - 7, Text - x
Added token: Type - 25, Text - 
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - result
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - def, Text - 'def'
Processing assignment for variable: def
Error at evaluate: Expect '=' after variable name. instead found token type: 7
Error: Expect '=' after variable name. instead found evaluate

Run at: Mon Apr 22 22:30:25 2024
File: in01.py
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - resultComparison
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultComparison
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 2
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 13, Text - if
Added token: Type - 7, Text - resultIf
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 4
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resultIf
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resultComparison
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultComparison =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultComparison
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - ResultIf =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - resultIf
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - resultComparison, Text - 'resultComparison'
Processing assignment for variable: resultComparison
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - resultIf, Text - 'resultIf'
Processing assignment for variable: resultIf
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: x = 5
Assigning: resultComparison = 3
Assigning: z = 0
Condition evaluated to: true
Assigning: resultIf = 5
Condition evaluated to: true
Assigning: z = 1
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
ResultComparison = 3 
ResultIf = 5 
z = 1 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 15:45:24 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 6
Assigning: b = 2
Assigning: val = 13
Assigning: tmp = 24
Assigning: d = 8
Assigning: tempA = 67
val = 13 
tmp = 24 
tempA = 67 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 15:45:48 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: y = 18
Assigning: c = 17
a = 23 
b = 60 
c = 17 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 15:45:58 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
Processing assignment for variable: def
Error at evaluate: Expect '=' after variable name. instead found token type: 7
Error: Expect '=' after variable name. instead found evaluate

Run at: Tue Apr 23 15:46:34 2024
File: in04.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - a
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 9
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 13, Text - if
Added token: Type - 7, Text - x
Added token: Type - 22, Text - <=
Added token: Type - 0, Text - 100
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - resB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 6
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - e =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - e
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
start parsing the block
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Assigning: y = 0
Assigning: z = 0
Condition evaluated to: true
Assigning: tmpA = 9
Assigning: tmpB = 24
Assigning: z = 20
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: false
Assigning: resA = 30
Assigning: resB = 27
Assigning: y = 54
Exiting block environment, variables preserved in parent environment.
Assigning: e = 15
Condition evaluated to: true
Assigning: t1 = 31
Assigning: t2 = 15
Assigning: e = 46
Exiting block environment, variables preserved in parent environment.
e = 46 
y = 54 
z = 20 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 15:46:48 2024
File: in05.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - c
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 9
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 18, Text - >
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - resB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 7
Added token: Type - 19, Text - <
Added token: Type - 7, Text - e
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 9
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - e =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - e
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
start parsing the block
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Assigning: y = 0
Assigning: z = 0
Condition evaluated to: true
Assigning: tmpA = 9
Assigning: tmpB = 24
Assigning: z = 20
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: false
Assigning: resA = 30
Assigning: resB = 27
Assigning: y = 54
Exiting block environment, variables preserved in parent environment.
Assigning: e = 5
Condition evaluated to: false
e = 5 
y = 54 
z = 20 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 15:47:00 2024
File: in06.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 20
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 10
Added token: Type - 19, Text - <
Added token: Type - 7, Text - tempA
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - e
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 12
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 50
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 16
Assigning: b = 4
Assigning: val = 20
Assigning: c = 0
Assigning: y = 0
Condition evaluated to: false
Assigning: e = 16
Assigning: tempB = 28
Condition evaluated to: true
Assigning: c = 1
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 20 
c = 1 
y = 0 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 15:47:11 2024
File: in07.py
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - d
Added token: Type - 19, Text - <
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 7, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - result
Added token: Type - 6, Text - )
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - def, Text - 'def'
Processing assignment for variable: def
Error at evaluate: Expect '=' after variable name. instead found token type: 7
Error: Expect '=' after variable name. instead found evaluate

Run at: Tue Apr 23 15:47:26 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 31
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 11
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 16
Added token: Type - 19, Text - <
Added token: Type - 7, Text - d
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 25, Text - 
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - result
Added token: Type - 7, Text - return
Added token: Type - 7, Text - a
Added token: Type - 25, Text - 
Added token: Type - 7, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 7
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - scale
Added token: Type - 7, Text - return
Added token: Type - 7, Text - b
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
Processing assignment for variable: def
Error at evaluate: Expect '=' after variable name. instead found token type: 7
Error: Expect '=' after variable name. instead found evaluate

Run at: Tue Apr 23 15:48:01 2024
File: in07.py
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - d
Added token: Type - 19, Text - <
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 7, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - result
Added token: Type - 6, Text - )
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - def, Text - 'def'
Processing assignment for variable: def
Error at evaluate: Expect '=' after variable name. instead found token type: 7
Error: Expect '=' after variable name. instead found evaluate

Run at: Tue Apr 23 17:12:51 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 6
Assigning: b = 2
Assigning: val = 13
Assigning: tmp = 24
Assigning: d = 8
Assigning: tempA = 67
val = 13 
tmp = 24 
tempA = 67 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 17:13:11 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: y = 18
Assigning: c = 17
a = 23 
b = 60 
c = 17 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 17:13:20 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
Error at     : Expect new line after the colon. instead found token type: 24
Error: Expect new line after the colon. instead found     

Run at: Tue Apr 23 17:14:10 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Error: UnExpected expression.

Run at: Tue Apr 23 17:22:33 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f8193005830
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - (, Text - '('
Error: Unexpected token in statement

Run at: Tue Apr 23 18:32:26 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 6
Assigning: b = 2
Assigning: val = 13
Assigning: tmp = 24
Assigning: d = 8
Assigning: tempA = 67
val = 13 
tmp = 24 
tempA = 67 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 18:32:42 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: y = 18
Assigning: c = 17
a = 23 
b = 60 
c = 17 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 18:32:58 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f9c481058c0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - (, Text - '('
Error: Unexpected token in statement

Run at: Tue Apr 23 18:41:18 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fe6af0058e0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Processing assignment for variable: tmp
Parsing statement, next token: Type - (, Text - '('
Error: Unexpected token in statement

Run at: Tue Apr 23 18:42:35 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f9b71708210
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Processing assignment for variable: tmp
Parsing statement, next token: Type - (, Text - '('
Error: Unexpected token in statement

Run at: Tue Apr 23 18:42:48 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Processing assignment for variable: a
Error: UnExpected expression.

Run at: Tue Apr 23 18:46:44 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fca2cf08210
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - (, Text - '('
Error: Unexpected token in statement

Run at: Tue Apr 23 18:54:16 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fe7357079c0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: a = 29
Assigning: b = 27
Assigning: tmp = 64
Assigning: tmp = 64
a = 23 
b = 60 
result = 64 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 18:54:43 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 6
Assigning: b = 2
Assigning: val = 13
Assigning: tmp = 24
Assigning: d = 8
Assigning: tempA = 67
val = 13 
tmp = 24 
tempA = 67 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 18:55:01 2024
File: in07.py
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - d
Added token: Type - 19, Text - <
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - result
Added token: Type - 6, Text - )
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
got to return statement result
parsing return statement 
return statement evaluated to  0x7fc35d104cb0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: val = 10
Assigning: b = 13
Assigning: c = 17
Assigning: d = 226
Assigning: result = 0
Condition evaluated to: false
Assigning: result = 0
result = 0 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 18:55:18 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 31
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 11
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 16
Added token: Type - 19, Text - <
Added token: Type - 7, Text - d
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 25, Text - 
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - result
Added token: Type - 28, Text - return
Added token: Type - 7, Text - a
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 7
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - scale
Added token: Type - 28, Text - return
Added token: Type - 7, Text - b
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param a
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
consumed the ddent, exiting the func block
Parsing statement, next token: Type -     , Text - '    '
Error: Unexpected token in statement

Run at: Tue Apr 23 18:55:21 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 31
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 11
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 16
Added token: Type - 19, Text - <
Added token: Type - 7, Text - d
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 25, Text - 
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - result
Added token: Type - 28, Text - return
Added token: Type - 7, Text - a
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 7
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - scale
Added token: Type - 28, Text - return
Added token: Type - 7, Text - b
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param a
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
consumed the ddent, exiting the func block
Parsing statement, next token: Type -     , Text - '    '
Error: Unexpected token in statement

Run at: Tue Apr 23 18:55:25 2024
File: in09.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 24
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - sumInts
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 7, Text - scale
Added token: Type - 1, Text - +
Added token: Type - 7, Text - y
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - sumInts
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fde1c104cb0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func sumInts
pushing back param x
pushing back param y
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fde1c105020
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 34
Assigning: b = 321
Assigning: z = 20
Assigning: tmp = 54
Assigning: tmpA = 60
Assigning: scale = 2
Assigning: tmp = 389
Assigning: tmpB = 403
a = 34 
b = 321 
tmpA = 60 
tmpB = 403 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 18:55:37 2024
File: in10.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 6, Text - )
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpC
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpD
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - tmpE
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 100
Added token: Type - 2, Text - -
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpF
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpC =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpC
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpD =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpD
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpE =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpE
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpF =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpF
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fa891905650
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - tmpC, Text - 'tmpC'
Processing assignment for variable: tmpC
Parsing statement, next token: Type - tmpD, Text - 'tmpD'
Processing assignment for variable: tmpD
Parsing statement, next token: Type - tmpE, Text - 'tmpE'
Processing assignment for variable: tmpE
Parsing statement, next token: Type - tmpF, Text - 'tmpF'
Processing assignment for variable: tmpF
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 18
Assigning: b = 105
Assigning: c = 110
Assigning: z = 15
Assigning: tmp = 28
Assigning: tmpA = 25
Assigning: z = 15
Assigning: tmp = 230
Assigning: tmpB = 244
Assigning: z = 15
Assigning: tmp = 235
Assigning: tmpC = 470
Assigning: z = 15
Assigning: tmp = 125
Assigning: tmpD = 129
Assigning: z = 15
Assigning: tmp = 17
Assigning: tmpE = 83
Assigning: z = 15
Assigning: tmp = 20
Assigning: tmpF = 40
tmpA = 25 
tmpB = 244 
tmpC = 470 
tmpD = 129 
tmpE = 83 
tmpF = 40 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 18:55:54 2024
File: in11.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 7, Text - y
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 2, Text - -
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func addSum
pushing back param x
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
got to return statement result
parsing return statement 
return statement evaluated to  0x7fc229804770
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluateSums
pushing back param x
pushing back param y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fc229804d30
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Error: Variable 'a' is not defined.

Run at: Tue Apr 23 21:26:28 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 6
Assigning: b = 2
Assigning: val = 13
Assigning: tmp = 24
Assigning: d = 8
Assigning: tempA = 67
val = 13 
tmp = 24 
tempA = 67 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:27:36 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: y = 18
Assigning: c = 17
a = 23 
b = 60 
c = 17 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:28:16 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - dedent
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fb503904450
consumed the ddent, exiting the func blockdedent
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: a = 29
Assigning: b = 27
Assigning: tmp = 64
Assigning: tmp = 64
a = 23 
b = 60 
result = 64 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:29:21 2024
File: in04.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - a
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 9
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 25, Text - dedent
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - dedent
Added token: Type - 13, Text - if
Added token: Type - 7, Text - x
Added token: Type - 22, Text - <=
Added token: Type - 0, Text - 100
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - dedent
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - resB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - dedent
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 6
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - dedent
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - e =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - e
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddentdedent
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddentdedent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddentdedent
start parsing the block
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddentdedent
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
consuming ddentdedent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Assigning: y = 0
Assigning: z = 0
Condition evaluated to: true
Assigning: tmpA = 9
Assigning: tmpB = 24
Assigning: z = 20
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: false
Assigning: resA = 30
Assigning: resB = 27
Assigning: y = 54
Exiting block environment, variables preserved in parent environment.
Assigning: e = 15
Condition evaluated to: true
Assigning: t1 = 31
Assigning: t2 = 15
Assigning: e = 46
Exiting block environment, variables preserved in parent environment.
e = 46 
y = 54 
z = 20 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:29:26 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 31
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 11
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - dedent
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 16
Added token: Type - 19, Text - <
Added token: Type - 7, Text - d
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - dedent
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 25, Text - dedent
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - result
Added token: Type - 28, Text - return
Added token: Type - 7, Text - a
Added token: Type - 25, Text - dedent
Added token: Type - 27, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 7
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - dedent
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - dedent
Added token: Type - 25, Text - dedent
Added token: Type - 24, Text - indent
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - scale
Added token: Type - 28, Text - return
Added token: Type - 7, Text - b
Added token: Type - 25, Text - dedent
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param a
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
consumed the ddent, exiting the func blockdedent
Parsing statement, next token: Type - indent, Text - 'indent'
Error: Unexpected token in statement

Run at: Tue Apr 23 21:33:14 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 31
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 11
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 16
Added token: Type - 19, Text - <
Added token: Type - 7, Text - d
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 25, Text - 
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - result
Added token: Type - 28, Text - return
Added token: Type - 7, Text - a
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 7
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - scale
Added token: Type - 28, Text - return
Added token: Type - 7, Text - b
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param a
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
got to return statement a
parsing return statement 
return statement evaluated to  0x7fe40f805a90
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func increment
pushing back param b
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
consuming ddent
start parsing the block
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
consuming ddent
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
got to return statement b
parsing return statement 
return statement evaluated to  0x7fe40f8064e0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 28
Assigning: b = 99
Assigning: val = 56
Assigning: a = 51
Assigning: c = 47
Assigning: d = 2637
Assigning: result = 0
Condition evaluated to: true
Assigning: result = 1
Exiting block environment, variables preserved in parent environment.
Assigning: a = 1
Assigning: tmpA = 1
Assigning: scale = 0
Assigning: x = 102
Assigning: val = 315
Assigning: b = 410
Condition evaluated to: true
Assigning: scale = 1
Exiting block environment, variables preserved in parent environment.
Assigning: b = 1
Assigning: tmpB = 1
a = 28 
b = 99 
tmpA = 1 
tmpB = 1 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:33:43 2024
File: in11.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 7, Text - y
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 2, Text - -
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func addSum
pushing back param x
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
got to return statement result
parsing return statement 
return statement evaluated to  0x7f8984004770
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluateSums
pushing back param x
pushing back param y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f8984004d30
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Error: Variable 'a' is not defined.

Run at: Tue Apr 23 21:33:51 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 6
Assigning: b = 2
Assigning: val = 13
Assigning: tmp = 24
Assigning: d = 8
Assigning: tempA = 67
val = 13 
tmp = 24 
tempA = 67 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:34:00 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: y = 18
Assigning: c = 17
a = 23 
b = 60 
c = 17 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:34:14 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fe9148058e0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: a = 29
Assigning: b = 27
Assigning: tmp = 64
Assigning: tmp = 64
a = 23 
b = 60 
result = 64 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:34:23 2024
File: in04.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - a
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 9
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 13, Text - if
Added token: Type - 7, Text - x
Added token: Type - 22, Text - <=
Added token: Type - 0, Text - 100
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - resB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 6
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - e =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - e
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
start parsing the block
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Assigning: y = 0
Assigning: z = 0
Condition evaluated to: true
Assigning: tmpA = 9
Assigning: tmpB = 24
Assigning: z = 20
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: false
Assigning: resA = 30
Assigning: resB = 27
Assigning: y = 54
Exiting block environment, variables preserved in parent environment.
Assigning: e = 15
Condition evaluated to: true
Assigning: t1 = 31
Assigning: t2 = 15
Assigning: e = 46
Exiting block environment, variables preserved in parent environment.
e = 46 
y = 54 
z = 20 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:34:28 2024
File: in05.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - c
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 9
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 18, Text - >
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - resB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 7
Added token: Type - 19, Text - <
Added token: Type - 7, Text - e
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 9
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - e =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - e
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
start parsing the block
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Assigning: y = 0
Assigning: z = 0
Condition evaluated to: true
Assigning: tmpA = 9
Assigning: tmpB = 24
Assigning: z = 20
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: false
Assigning: resA = 30
Assigning: resB = 27
Assigning: y = 54
Exiting block environment, variables preserved in parent environment.
Assigning: e = 5
Condition evaluated to: false
e = 5 
y = 54 
z = 20 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:34:39 2024
File: in06.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 20
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 10
Added token: Type - 19, Text - <
Added token: Type - 7, Text - tempA
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - e
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 12
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 50
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 16
Assigning: b = 4
Assigning: val = 20
Assigning: c = 0
Assigning: y = 0
Condition evaluated to: false
Assigning: e = 16
Assigning: tempB = 28
Condition evaluated to: true
Assigning: c = 1
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 20 
c = 1 
y = 0 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:34:48 2024
File: in07.py
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - d
Added token: Type - 19, Text - <
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - result
Added token: Type - 6, Text - )
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
got to return statement result
parsing return statement 
return statement evaluated to  0x7fe9a4f075f0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: val = 10
Assigning: b = 13
Assigning: c = 17
Assigning: d = 226
Assigning: result = 0
Condition evaluated to: false
Assigning: result = 0
result = 0 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:34:56 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 31
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 11
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 16
Added token: Type - 19, Text - <
Added token: Type - 7, Text - d
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 25, Text - 
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - result
Added token: Type - 28, Text - return
Added token: Type - 7, Text - a
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 7
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - scale
Added token: Type - 28, Text - return
Added token: Type - 7, Text - b
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param a
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
got to return statement a
parsing return statement 
return statement evaluated to  0x7fb681805a90
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func increment
pushing back param b
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
consuming ddent
start parsing the block
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
consuming ddent
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
got to return statement b
parsing return statement 
return statement evaluated to  0x7fb6818064e0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 28
Assigning: b = 99
Assigning: val = 56
Assigning: a = 51
Assigning: c = 47
Assigning: d = 2637
Assigning: result = 0
Condition evaluated to: true
Assigning: result = 1
Exiting block environment, variables preserved in parent environment.
Assigning: a = 1
Assigning: tmpA = 1
Assigning: scale = 0
Assigning: x = 102
Assigning: val = 315
Assigning: b = 410
Condition evaluated to: true
Assigning: scale = 1
Exiting block environment, variables preserved in parent environment.
Assigning: b = 1
Assigning: tmpB = 1
a = 28 
b = 99 
tmpA = 1 
tmpB = 1 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:35:11 2024
File: in09.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 24
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - sumInts
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 7, Text - scale
Added token: Type - 1, Text - +
Added token: Type - 7, Text - y
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - sumInts
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fefdfa04cb0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func sumInts
pushing back param x
pushing back param y
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fefdfa05020
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 34
Assigning: b = 321
Assigning: z = 20
Assigning: tmp = 54
Assigning: tmpA = 60
Assigning: scale = 2
Assigning: tmp = 389
Assigning: tmpB = 403
a = 34 
b = 321 
tmpA = 60 
tmpB = 403 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:35:24 2024
File: in10.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 6, Text - )
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpC
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpD
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - tmpE
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 100
Added token: Type - 2, Text - -
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpF
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpC =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpC
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpD =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpD
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpE =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpE
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpF =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpF
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7faaa5904d50
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - tmpC, Text - 'tmpC'
Processing assignment for variable: tmpC
Parsing statement, next token: Type - tmpD, Text - 'tmpD'
Processing assignment for variable: tmpD
Parsing statement, next token: Type - tmpE, Text - 'tmpE'
Processing assignment for variable: tmpE
Parsing statement, next token: Type - tmpF, Text - 'tmpF'
Processing assignment for variable: tmpF
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 18
Assigning: b = 105
Assigning: c = 110
Assigning: z = 15
Assigning: tmp = 28
Assigning: tmpA = 25
Assigning: z = 15
Assigning: tmp = 230
Assigning: tmpB = 244
Assigning: z = 15
Assigning: tmp = 235
Assigning: tmpC = 470
Assigning: z = 15
Assigning: tmp = 125
Assigning: tmpD = 129
Assigning: z = 15
Assigning: tmp = 17
Assigning: tmpE = 83
Assigning: z = 15
Assigning: tmp = 20
Assigning: tmpF = 40
tmpA = 25 
tmpB = 244 
tmpC = 470 
tmpD = 129 
tmpE = 83 
tmpF = 40 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 21:35:45 2024
File: in11.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 7, Text - y
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 2, Text - -
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func addSum
pushing back param x
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
got to return statement result
parsing return statement 
return statement evaluated to  0x7f876a104770
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluateSums
pushing back param x
pushing back param y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f876a104d30
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Error: Variable 'a' is not defined.

Run at: Tue Apr 23 21:52:08 2024
File: in11.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 7, Text - y
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 2, Text - -
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func addSum
pushing back param x
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
got to return statement result
parsing return statement 
return statement evaluated to  0x7fe525004d80
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluateSums
pushing back param x
pushing back param y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fe525005340
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Found variable a in current environment with value 10
Found variable b in current environment with value 5
Variable a not found in current environment, searching in parent.
Variable a not found in current environment, searching in parent.
Error: Variable 'a' is not defined.

Run at: Tue Apr 23 22:01:22 2024
File: in11.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 7, Text - y
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 2, Text - -
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func addSum
pushing back param x
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
got to return statement result
parsing return statement 
return statement evaluated to  0x7fc3d6707670
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluateSums
pushing back param x
pushing back param y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fc3d6707c30
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Found variable a in current environment with value 10
Found variable b in current environment with value 5
Variable a not found in current environment, searching in parent.
Variable a not found in current environment, searching in parent.
Found variable a in current environment with value 10
Variable x not found in current environment, searching in parent.
Found variable x in current environment with value 10
Variable y not found in current environment, searching in parent.
Found variable y in current environment with value 5
Assigning: c = 35
Found variable c in current environment with value 35
Variable x not found in current environment, searching in parent.
Found variable x in current environment with value 10
Assigning: x = 27
Found variable x in current environment with value 27
Variable x not found in current environment, searching in parent.
Found variable x in current environment with value 27
Variable a not found in current environment, searching in parent.
Variable a not found in current environment, searching in parent.
Variable a not found in current environment, searching in parent.
Variable a not found in current environment, searching in parent.
Found variable a in current environment with value 10
Assigning: z = 40
Variable x not found in current environment, searching in parent.
Found variable x in current environment with value 27
Variable b not found in current environment, searching in parent.
Variable b not found in current environment, searching in parent.
Variable b not found in current environment, searching in parent.
Variable b not found in current environment, searching in parent.
Found variable b in current environment with value 5
Assigning: x = 32
Found variable x in current environment with value 32
Found variable x in current environment with value 32
Assigning: result = 144
Found variable result in current environment with value 144
Assigning: tmp = 144
Found variable tmp in current environment with value 144
Assigning: tmp = 144
tmp = Found variable tmp in current environment with value 144
144 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:01:36 2024
File: in10.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 6, Text - )
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpC
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpD
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - tmpE
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 100
Added token: Type - 2, Text - -
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpF
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpC =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpC
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpD =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpD
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpE =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpE
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpF =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpF
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fc72f104d50
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - tmpC, Text - 'tmpC'
Processing assignment for variable: tmpC
Parsing statement, next token: Type - tmpD, Text - 'tmpD'
Processing assignment for variable: tmpD
Parsing statement, next token: Type - tmpE, Text - 'tmpE'
Processing assignment for variable: tmpE
Parsing statement, next token: Type - tmpF, Text - 'tmpF'
Processing assignment for variable: tmpF
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 18
Found variable a in current environment with value 18
Found variable a in current environment with value 18
Found variable a in current environment with value 18
Found variable a in current environment with value 18
Assigning: b = 105
Found variable a in current environment with value 18
Found variable b in current environment with value 105
Assigning: c = 110
Found variable a in current environment with value 18
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 13
Found variable z in current environment with value 15
Assigning: tmp = 28
Found variable tmp in current environment with value 28
Assigning: tmpA = 25
Found variable b in current environment with value 105
Found variable c in current environment with value 110
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 215
Found variable z in current environment with value 15
Assigning: tmp = 230
Found variable tmp in current environment with value 230
Assigning: tmpB = 244
Found variable c in current environment with value 110
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 220
Found variable z in current environment with value 15
Assigning: tmp = 235
Found variable tmp in current environment with value 235
Assigning: tmpC = 470
Found variable b in current environment with value 105
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 110
Found variable z in current environment with value 15
Assigning: tmp = 125
Found variable tmp in current environment with value 125
Assigning: tmpD = 129
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 2
Found variable z in current environment with value 15
Assigning: tmp = 17
Found variable tmp in current environment with value 17
Assigning: tmpE = 83
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 5
Found variable z in current environment with value 15
Assigning: tmp = 20
Found variable tmp in current environment with value 20
Assigning: tmpF = 40
tmpA = Found variable tmpA in current environment with value 25
25 
tmpB = Found variable tmpB in current environment with value 244
244 
tmpC = Found variable tmpC in current environment with value 470
470 
tmpD = Found variable tmpD in current environment with value 129
129 
tmpE = Found variable tmpE in current environment with value 83
83 
tmpF = Found variable tmpF in current environment with value 40
40 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:02:14 2024
File: in10.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 6, Text - )
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpC
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpD
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - tmpE
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 100
Added token: Type - 2, Text - -
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpF
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpC =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpC
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpD =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpD
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpE =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpE
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpF =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpF
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f93eb005650
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - tmpC, Text - 'tmpC'
Processing assignment for variable: tmpC
Parsing statement, next token: Type - tmpD, Text - 'tmpD'
Processing assignment for variable: tmpD
Parsing statement, next token: Type - tmpE, Text - 'tmpE'
Processing assignment for variable: tmpE
Parsing statement, next token: Type - tmpF, Text - 'tmpF'
Processing assignment for variable: tmpF
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 18
Found variable a in current environment with value 18
Found variable a in current environment with value 18
Found variable a in current environment with value 18
Found variable a in current environment with value 18
Assigning: b = 105
Found variable a in current environment with value 18
Found variable b in current environment with value 105
Assigning: c = 110
Found variable a in current environment with value 18
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 13
Found variable z in current environment with value 15
Assigning: tmp = 28
Found variable tmp in current environment with value 28
Assigning: tmpA = 25
Found variable b in current environment with value 105
Found variable c in current environment with value 110
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 215
Found variable z in current environment with value 15
Assigning: tmp = 230
Found variable tmp in current environment with value 230
Assigning: tmpB = 244
Found variable c in current environment with value 110
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 220
Found variable z in current environment with value 15
Assigning: tmp = 235
Found variable tmp in current environment with value 235
Assigning: tmpC = 470
Found variable b in current environment with value 105
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 110
Found variable z in current environment with value 15
Assigning: tmp = 125
Found variable tmp in current environment with value 125
Assigning: tmpD = 129
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 2
Found variable z in current environment with value 15
Assigning: tmp = 17
Found variable tmp in current environment with value 17
Assigning: tmpE = 83
Assigning: z = 15
Variable val not found in current environment, searching in parent.
Found variable val in current environment with value 5
Found variable z in current environment with value 15
Assigning: tmp = 20
Found variable tmp in current environment with value 20
Assigning: tmpF = 40
tmpA = Found variable tmpA in current environment with value 25
25 
tmpB = Found variable tmpB in current environment with value 244
244 
tmpC = Found variable tmpC in current environment with value 470
470 
tmpD = Found variable tmpD in current environment with value 129
129 
tmpE = Found variable tmpE in current environment with value 83
83 
tmpF = Found variable tmpF in current environment with value 40
40 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:02:57 2024
File: in10.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 6, Text - )
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpC
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpD
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - tmpE
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 100
Added token: Type - 2, Text - -
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpF
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 6, Text - )
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpC =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpC
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpD =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpD
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpE =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpE
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpF =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpF
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fa4da904d50
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - tmpC, Text - 'tmpC'
Processing assignment for variable: tmpC
Parsing statement, next token: Type - tmpD, Text - 'tmpD'
Processing assignment for variable: tmpD
Parsing statement, next token: Type - tmpE, Text - 'tmpE'
Processing assignment for variable: tmpE
Parsing statement, next token: Type - tmpF, Text - 'tmpF'
Processing assignment for variable: tmpF
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 18
Assigning: b = 105
Assigning: c = 110
Assigning: z = 15
Assigning: tmp = 28
Assigning: tmpA = 25
Assigning: z = 15
Assigning: tmp = 230
Assigning: tmpB = 244
Assigning: z = 15
Assigning: tmp = 235
Assigning: tmpC = 470
Assigning: z = 15
Assigning: tmp = 125
Assigning: tmpD = 129
Assigning: z = 15
Assigning: tmp = 17
Assigning: tmpE = 83
Assigning: z = 15
Assigning: tmp = 20
Assigning: tmpF = 40
tmpA = 25 
tmpB = 244 
tmpC = 470 
tmpD = 129 
tmpE = 83 
tmpF = 40 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:03:23 2024
File: in11.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 7, Text - y
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 2, Text - -
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - addSum
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluateSums
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func addSum
pushing back param x
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
got to return statement result
parsing return statement 
return statement evaluated to  0x7f913d004d80
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluateSums
pushing back param x
pushing back param y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f913d005340
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 35
Assigning: x = 27
Assigning: z = 40
Assigning: x = 32
Assigning: result = 144
Assigning: tmp = 144
Assigning: tmp = 144
tmp = 144 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:03:28 2024
File: in9.py
Could not open file: in9.py

Run at: Tue Apr 23 22:03:32 2024
File: in09.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 24
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 25
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - z
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - sumInts
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 3, Text - *
Added token: Type - 7, Text - scale
Added token: Type - 1, Text - +
Added token: Type - 7, Text - y
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 7, Text - sumInts
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param val
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fb487904cb0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func sumInts
pushing back param x
pushing back param y
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7fb487905020
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 34
Assigning: b = 321
Assigning: z = 20
Assigning: tmp = 54
Assigning: tmpA = 60
Assigning: scale = 2
Assigning: tmp = 389
Assigning: tmpB = 403
a = 34 
b = 321 
tmpA = 60 
tmpB = 403 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:03:46 2024
File: in08.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 31
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 20
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 14
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 11
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 16
Added token: Type - 19, Text - <
Added token: Type - 7, Text - d
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 25, Text - 
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - result
Added token: Type - 28, Text - return
Added token: Type - 7, Text - a
Added token: Type - 25, Text - 
Added token: Type - 27, Text - def
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - x
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 7
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 45
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - scale
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - scale
Added token: Type - 28, Text - return
Added token: Type - 7, Text - b
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - increment
Added token: Type - 5, Text - (
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpA
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmpB =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmpB
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param a
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
got to return statement a
parsing return statement 
return statement evaluated to  0x7f98679050a0
consumed the ddent, exiting the func block
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func increment
pushing back param b
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
consuming ddent
start parsing the block
Parsing statement, next token: Type - scale, Text - 'scale'
Processing assignment for variable: scale
consuming ddent
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
got to return statement b
parsing return statement 
return statement evaluated to  0x7f9867905b00
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 28
Assigning: b = 99
Assigning: val = 56
Assigning: a = 51
Assigning: c = 47
Assigning: d = 2637
Assigning: result = 0
Condition evaluated to: true
Assigning: result = 1
Exiting block environment, variables preserved in parent environment.
Assigning: a = 1
Assigning: tmpA = 1
Assigning: scale = 0
Assigning: x = 102
Assigning: val = 315
Assigning: b = 410
Condition evaluated to: true
Assigning: scale = 1
Exiting block environment, variables preserved in parent environment.
Assigning: b = 1
Assigning: tmpB = 1
a = 28 
b = 99 
tmpA = 1 
tmpB = 1 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:03:54 2024
File: in07.py
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - d
Added token: Type - 19, Text - <
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 28, Text - return
Added token: Type - 7, Text - result
Added token: Type - 25, Text - 
Added token: Type - 7, Text - result
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - result
Added token: Type - 6, Text - )
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
consuming ddent
got to return statement result
parsing return statement 
return statement evaluated to  0x7fad9ea04340
consumed the ddent, exiting the func block
Parsing statement, next token: Type - result, Text - 'result'
Processing assignment for variable: result
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: val = 10
Assigning: b = 13
Assigning: c = 17
Assigning: d = 226
Assigning: result = 0
Condition evaluated to: false
Assigning: result = 0
result = 0 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:04:00 2024
File: in06.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 4
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - val
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 20
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 10
Added token: Type - 19, Text - <
Added token: Type - 7, Text - tempA
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 16
Added token: Type - 7, Text - tempB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - e
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 12
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 13, Text - if
Added token: Type - 7, Text - tempB
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 50
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
start parsing the block
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - tempB, Text - 'tempB'
Processing assignment for variable: tempB
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
start parsing the block
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
consuming ddent
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 16
Assigning: b = 4
Assigning: val = 20
Assigning: c = 0
Assigning: y = 0
Condition evaluated to: false
Assigning: e = 16
Assigning: tempB = 28
Condition evaluated to: true
Assigning: c = 1
Exiting block environment, variables preserved in parent environment.
Exiting block environment, variables preserved in parent environment.
val = 20 
c = 1 
y = 0 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:04:12 2024
File: in05.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - c
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 9
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 18, Text - >
Added token: Type - 7, Text - c
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - resB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 13, Text - if
Added token: Type - 0, Text - 7
Added token: Type - 19, Text - <
Added token: Type - 7, Text - e
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 9
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - e =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - e
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
start parsing the block
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Assigning: y = 0
Assigning: z = 0
Condition evaluated to: true
Assigning: tmpA = 9
Assigning: tmpB = 24
Assigning: z = 20
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: false
Assigning: resA = 30
Assigning: resB = 27
Assigning: y = 54
Exiting block environment, variables preserved in parent environment.
Assigning: e = 5
Condition evaluated to: false
e = 5 
y = 54 
z = 20 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:04:20 2024
File: in04.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 10
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 7, Text - x
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 7, Text - c
Added token: Type - 3, Text - *
Added token: Type - 7, Text - d
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 13, Text - if
Added token: Type - 7, Text - a
Added token: Type - 18, Text - >
Added token: Type - 0, Text - 9
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 13
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - tmpA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmpB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 4
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpA
Added token: Type - 7, Text - z
Added token: Type - 8, Text - =
Added token: Type - 7, Text - tmpA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmpB
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 25, Text - 
Added token: Type - 13, Text - if
Added token: Type - 7, Text - x
Added token: Type - 22, Text - <=
Added token: Type - 0, Text - 100
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 25, Text - 
Added token: Type - 14, Text - else
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - resA
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - resB
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 13
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 1
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - resA
Added token: Type - 1, Text - +
Added token: Type - 7, Text - resB
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 25, Text - 
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 15
Added token: Type - 13, Text - if
Added token: Type - 7, Text - b
Added token: Type - 19, Text - <
Added token: Type - 0, Text - 6
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - t1
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 14
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - t2
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - e
Added token: Type - 8, Text - =
Added token: Type - 7, Text - t1
Added token: Type - 1, Text - +
Added token: Type - 7, Text - t2
Added token: Type - 25, Text - 
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - e =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - e
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - y =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - y
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - z =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - z
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - x, Text - 'x'
Processing assignment for variable: x
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
start parsing the block
Parsing statement, next token: Type - tmpA, Text - 'tmpA'
Processing assignment for variable: tmpA
Parsing statement, next token: Type - tmpB, Text - 'tmpB'
Processing assignment for variable: tmpB
Parsing statement, next token: Type - z, Text - 'z'
Processing assignment for variable: z
consuming ddent
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
consuming ddent
start parsing the block
Parsing statement, next token: Type - resA, Text - 'resA'
Processing assignment for variable: resA
Parsing statement, next token: Type - resB, Text - 'resB'
Processing assignment for variable: resB
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
consuming ddent
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
Parsing statement, next token: Type - if, Text - 'if'
start parsing the block
Parsing statement, next token: Type - t1, Text - 't1'
Processing assignment for variable: t1
Parsing statement, next token: Type - t2, Text - 't2'
Processing assignment for variable: t2
Parsing statement, next token: Type - e, Text - 'e'
Processing assignment for variable: e
consuming ddent
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 10
Assigning: b = 5
Assigning: c = 15
Assigning: d = 50
Assigning: x = 880
Assigning: y = 0
Assigning: z = 0
Condition evaluated to: true
Assigning: tmpA = 9
Assigning: tmpB = 24
Assigning: z = 20
Exiting block environment, variables preserved in parent environment.
Condition evaluated to: false
Assigning: resA = 30
Assigning: resB = 27
Assigning: y = 54
Exiting block environment, variables preserved in parent environment.
Assigning: e = 15
Condition evaluated to: true
Assigning: t1 = 31
Assigning: t2 = 15
Assigning: e = 46
Exiting block environment, variables preserved in parent environment.
e = 46 
y = 54 
z = 20 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:04:28 2024
File: in03.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 27, Text - def
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - x
Added token: Type - 6, Text - )
Added token: Type - 23, Text - :
Added token: Type - 24, Text -     
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - x
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 4
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 25
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 28, Text - return
Added token: Type - 7, Text - tmp
Added token: Type - 25, Text - 
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - evaluate
Added token: Type - 5, Text - (
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - result =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - def, Text - 'def'
parsing function def for func evaluate
pushing back param x
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
got to return statement tmp
parsing return statement 
return statement evaluated to  0x7f8b7f905050
consumed the ddent, exiting the func block
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: a = 29
Assigning: b = 27
Assigning: tmp = 64
Assigning: tmp = 64
a = 23 
b = 60 
result = 64 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:04:37 2024
File: in02.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 8
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 1
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 0
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 1, Text - +
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - a
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 2, Text - -
Added token: Type - 7, Text - c
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 7
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - y
Added token: Type - 8, Text - =
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - c
Added token: Type - 8, Text - =
Added token: Type - 7, Text - y
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 16
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - a =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - a
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - b =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - b
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - c =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - c
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - y, Text - 'y'
Processing assignment for variable: y
Parsing statement, next token: Type - c, Text - 'c'
Processing assignment for variable: c
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 8
Assigning: b = 3
Assigning: val = 16
Assigning: a = 23
Assigning: c = 9
Assigning: b = 60
Assigning: y = 18
Assigning: c = 17
a = 23 
b = 60 
c = 17 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:04:45 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
Parsing statement, next token: Type - a, Text - 'a'
Processing assignment for variable: a
Parsing statement, next token: Type - b, Text - 'b'
Processing assignment for variable: b
Parsing statement, next token: Type - val, Text - 'val'
Processing assignment for variable: val
Parsing statement, next token: Type - tmp, Text - 'tmp'
Processing assignment for variable: tmp
Parsing statement, next token: Type - d, Text - 'd'
Processing assignment for variable: d
Parsing statement, next token: Type - tempA, Text - 'tempA'
Processing assignment for variable: tempA
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
Parsing statement, next token: Type - print, Text - 'print'
Parsing print statement.
returned the block from parse 
Assigning: a = 6
Assigning: b = 2
Assigning: val = 13
Assigning: tmp = 24
Assigning: d = 8
Assigning: tempA = 67
val = 13 
tmp = 24 
tempA = 67 
Exiting block environment, variables preserved in parent environment.

Run at: Tue Apr 23 22:13:46 2024
File: in01.py
Added token: Type - 7, Text - a
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 6
Added token: Type - 7, Text - b
Added token: Type - 8, Text - =
Added token: Type - 0, Text - 2
Added token: Type - 7, Text - val
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 5
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 7, Text - tmp
Added token: Type - 8, Text - =
Added token: Type - 7, Text - b
Added token: Type - 1, Text - +
Added token: Type - 7, Text - val
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 2
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 8
Added token: Type - 1, Text - +
Added token: Type - 0, Text - 3
Added token: Type - 2, Text - -
Added token: Type - 0, Text - 15
Added token: Type - 7, Text - d
Added token: Type - 8, Text - =
Added token: Type - 7, Text - a
Added token: Type - 1, Text - +
Added token: Type - 7, Text - b
Added token: Type - 7, Text - tempA
Added token: Type - 8, Text - =
Added token: Type - 7, Text - d
Added token: Type - 3, Text - *
Added token: Type - 0, Text - 6
Added token: Type - 2, Text - -
Added token: Type - 7, Text - val
Added token: Type - 1, Text - +
Added token: Type - 7, Text - d
Added token: Type - 1, Text - +
Added token: Type - 7, Text - tmp
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - val =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - val
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tmp =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tmp
Added token: Type - 6, Text - )
Added token: Type - 11, Text - print
Added token: Type - 5, Text - (
Added token: Type - 15, Text - tempA =
Added token: Type - 16, Text - ,
Added token: Type - 7, Text - tempA
Added token: Type - 6, Text - )
val = 13 
tmp = 24 
tempA = 67 

Run at: Tue Apr 23 22:14:29 2024
File: in01.py
val = 13 
tmp = 24 
tempA = 67 

Run at: Tue Apr 23 22:14:40 2024
File: in02.py
a = 23 
b = 60 
c = 17 

Run at: Tue Apr 23 22:14:47 2024
File: in03.py
a = 23 
b = 60 
result = 64 

Run at: Tue Apr 23 22:14:54 2024
File: in04.py
e = 46 
y = 54 
z = 20 

Run at: Tue Apr 23 22:15:01 2024
File: in05.py
e = 5 
y = 54 
z = 20 

Run at: Tue Apr 23 22:15:08 2024
File: in06.py
val = 20 
c = 1 
y = 0 

Run at: Tue Apr 23 22:15:17 2024
File: in07.py
result = 0 

Run at: Tue Apr 23 22:15:27 2024
File: in08.py
a = 28 
b = 99 
tmpA = 1 
tmpB = 1 

Run at: Tue Apr 23 22:15:37 2024
File: in09.py
a = 34 
b = 321 
tmpA = 60 
tmpB = 403 

Run at: Tue Apr 23 22:15:46 2024
File: in10.py
tmpA = 25 
tmpB = 244 
tmpC = 470 
tmpD = 129 
tmpE = 83 
tmpF = 40 

Run at: Tue Apr 23 22:15:59 2024
File: in11.py
tmp = 144 
